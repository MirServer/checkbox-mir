name: checkbox-mir
summary: Checkbox tests for the Mir project
description: |
  Collection of tests to be run on devices that are part of the mir project
version: git
confinement: strict
grade: stable

base: core22

plugs:
  checkbox-runtime:
    interface: content
    target: $SNAP/checkbox-runtime
    default-provider: checkbox22
  provider-resource:
    interface: content
    target: $SNAP/providers/plainbox-provider-resource
    default-provider: checkbox22
  provider-checkbox:
    interface: content
    target: $SNAP/providers/plainbox-provider-checkbox
    default-provider: checkbox22
  provider-ipdt:
    interface: content
    target: $SNAP/providers/plainbox-provider-ipdt
    default-provider: checkbox22
  provider-tpm2:
    interface: content
    target: $SNAP/providers/plainbox-provider-tpm2
    default-provider: checkbox22
  provider-certification-client:
    interface: content
    target: $SNAP/providers/plainbox-provider-certification-client
    default-provider: checkbox22

apps:
  checkbox-cli:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper
    plugs: &standard [home, network-bind, hardware-observe, bluez, bluetooth-control,
      gpio, modem-manager, mount-observe, network-manager, pulseaudio, serial-port,
      system-observe, tpm, timezone-control, timeserver-control]
  configure:
    command-chain: [bin/wrapper_local]
    command: bin/configure
  remote-slave:
    command-chain: [bin/wrapper_local]
    command: bin/checkbox-cli-wrapper slave
    daemon: simple
    restart-condition: on-failure
    plugs: *standard
  shell:
    command-chain: [bin/wrapper_local]
    command: bin/shell-wrapper
    plugs: *standard
  test-runner:
    command-chain: [bin/wrapper_local]
    command: bin/test-runner
    plugs: *standard

passthrough:
  hooks:
    configure:
      command-chain: [bin/wrapper_local]

parts:
  checkbox-provider-mir:
    plugin: checkbox-provider
    source: ./checkbox-provider-mir
    source-type: local
  parts-meta-info:
    plugin: nil
    override-build: |
      snapcraftctl build
      for p in `ls -d ../../*`; do
          if [ -d $p/src ]; then
            (cd $p/src
                if [ -d $p/src/.git ]; then
                    (echo `basename $p`\: && git show --pretty=format:"%h%d %aN %ci%n%s%n" -q ; echo ) >> $SNAPCRAFT_PART_INSTALL/parts_meta_info
                fi # for additional `source-type` support, elif them here
            )
          fi
      done
    after: [checkbox-provider-mir]
  launchers:
    plugin: dump
    source: launchers/
    organize:
      '*': bin/
  config-variables:
    plugin: dump
    source: config/
